@page "/forgot-password"
@using Blazor_WebAssembly.Services.Interfaces
@using System.ComponentModel.DataAnnotations
@inject IAuthService AuthService
@inject NavigationManager Navigation

<style>
    .form-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #1e1e2f;
        direction: rtl;
    }

    .form-card {
        background-color: #212529;
        padding: 2rem;
        border-radius: 6px;
        max-width: 420px;
        width: 100%;
        box-shadow: 0 0 12px rgba(0, 0, 0, 0.3);
        color: white;
    }

    label {
        margin-bottom: 0.5rem;
        font-weight: 500;
    }

    .form-control {
        background-color: #2c2c2c;
        border: 1px solid #444;
        color: white;
        border-radius: 5px;
    }

        .form-control:focus {
            background-color: #2c2c2c;
            border-color: #666;
            box-shadow: none;
        }

    .btn-danger {
        background-color: #dc3545;
        border: none;
        width: 100%;
        padding: 0.5rem;
        margin-top: 1rem;
    }

        .btn-danger:disabled {
            opacity: 0.7;
        }

    .alert {
        margin-top: 1rem;
        padding: 0.75rem;
        border-radius: 5px;
    }

    .alert-success {
        background-color: #198754;
        color: white;
    }

    .alert-danger {
        background-color: #dc3545;
        color: white;
    }

    .text-center a {
        text-decoration: none;
    }

        .text-center a:hover {
            text-decoration: underline;
        }
</style>

<div class="form-wrapper">
    <div class="form-card">
        <h4 class="text-center mb-4">שכחת סיסמה</h4>

        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success">@successMessage</div>
        }
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <EditForm Model="forgotModel" OnValidSubmit="HandleForgotPassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label for="email">כתובת אימייל</label>
                <InputText id="email" class="form-control" @bind-Value="forgotModel.Email" />
            </div>

            <button type="submit" class="btn btn-danger" disabled="@isSubmitting">
                @if (isSubmitting)
                {
                    <span>שולח...</span>
                }
                else
                {
                    <span>שלח קישור לאיפוס סיסמה</span>
                }
            </button>
        </EditForm>

        <div class="text-center mt-3">
            כבר נזכרת בסיסמה? <a href="/login" class="text-info">התחבר</a>
        </div>
    </div>
</div>

@code {
    private ForgotPasswordModel forgotModel = new();
    private string successMessage = string.Empty;
    private string errorMessage = string.Empty;
    private bool isSubmitting = false;

    private async Task HandleForgotPassword()
    {
        isSubmitting = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var result = await AuthService.SendPasswordResetEmail(forgotModel.Email);
            if (result)
            {
                successMessage = "קישור לאיפוס סיסמה נשלח לכתובת המייל שלך.";
            }
            else
            {
                errorMessage = "לא הצלחנו לשלוח את הקישור. ודא שכתובת האימייל נכונה.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"שגיאה: {ex.Message}";
        }

        isSubmitting = false;
    }

    public class ForgotPasswordModel
    {
        [Required(ErrorMessage = "יש להזין כתובת אימייל")]
        [EmailAddress(ErrorMessage = "כתובת אימייל לא תקינה")]
        public string Email { get; set; } = string.Empty;
    }
}


