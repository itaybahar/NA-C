@page "/warehouse/manager/dashboard"
@using Microsoft.AspNetCore.Authorization
@using Blazor_WebAssembly_Project.Components.helpers
@using Blazor_WebAssembly_Project.Components
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "WarehouseManager,Admin")]

<link href="css/dashboard.css" rel="stylesheet" />
<link href="css/themeToggle.css" rel="stylesheet" />
<link href="css/Sidebar.css" rel="stylesheet" />

<PageTitle>Dashboard - מנהל מחסן</PageTitle>

<div class="dashboard-wrapper @(sidebarCollapsed ? "sidebar-collapsed" : "")">
    <Sidebar SidebarOpen="@sidebarOpen"
             SidebarOpenChanged="@ToggleSidebarFromDashboard"
             IsCollapsed="@sidebarCollapsed"
             OnCollapseChanged="@OnSidebarCollapseChanged" />
    <div style="flex: 1; display: flex; flex-direction: column;">
        <!-- Top navbar with tabs -->
        <header class="admin-header">
            <div class="admin-navbar tabs-with-separator">
                <button class="dashboard-tab @(ActiveTab == "equipment" ? "active" : "")" @onclick='() => ChangeTab("equipment")'>
                    <i class="bi bi-list-ul"></i> רשימת ציוד
                </button>
                <button class="dashboard-tab @(ActiveTab == "blacklist" ? "active" : "")" @onclick='() => ChangeTab("blacklist")'>
                    <i class="bi bi-shield-x"></i> רשימה שחורה
                </button>
                <button class="dashboard-tab @(ActiveTab == "teams" ? "active" : "")" @onclick='() => ChangeTab("teams")'>
                    <i class="bi bi-people"></i> ניהול צוותים
                </button>
                <button class="dashboard-tab @(ActiveTab == "checkout" ? "active" : "")" @onclick='() => ChangeTab("checkout")'>
                    <i class="bi bi-box-arrow-right"></i> הוצאת ציוד
                </button>
                <button class="dashboard-tab @(ActiveTab == "return" ? "active" : "")" @onclick='() => ChangeTab("return")'>
                    <i class="bi bi-box-arrow-in-left"></i> החזרת ציוד
                </button>
                <button class="dashboard-tab @(ActiveTab == "add" ? "active" : "")" @onclick='() => ChangeTab("add")'>
                    <i class="bi bi-plus-circle"></i> הוספת ציוד
                </button>
                <div style="flex:1"></div>
            </div>
        </header>
        <main class="admin-content">
            <div class="admin-content-container">
                @if (ActiveTab == "equipment")
                {
                    <div class="dashboard-card">
                        <div class="card-header">
                            <h3>רשימת ציוד</h3>
                        </div>
                        <div class="card-content">
                            <EquipmentList />
                        </div>
                    </div>
                }
                else if (ActiveTab == "blacklist")
                {
                    <div class="dashboard-card">
                        <div class="card-header">
                            <h3>רשימה שחורה</h3>
                        </div>
                        <div class="card-content">
                            <BlackList />
                        </div>
                    </div>
                }
                else if (ActiveTab == "teams")
                {
                    <div class="dashboard-card">
                        <div class="card-header">
                            <h3>ניהול צוותים</h3>
                        </div>
                        <div class="card-content">
                            <AddTeam />
                        </div>
                    </div>
                }
                else if (ActiveTab == "checkout")
                {
                    <div class="dashboard-card">
                        <div class="card-header">
                            <h3>הוצאת ציוד</h3>
                        </div>
                        <div class="card-content">
                            <EquipmentCheckout />
                        </div>
                    </div>
                }
                else if (ActiveTab == "return")
                {
                    <div class="dashboard-card">
                        <div class="card-header">
                            <h3>החזרת ציוד</h3>
                        </div>
                        <div class="card-content">
                            <EquipmentReturnForm />
                        </div>
                    </div>
                }
                else if (ActiveTab == "add")
                {
                    <div class="dashboard-card">
                        <div class="card-header">
                            <h3>הוספת ציוד</h3>
                        </div>
                        <div class="card-content">
                            <AddEquipmentForm />
                        </div>
                    </div>
                }
            </div>
        </main>
    </div>
</div>

<style>
    :root {
        --background: #1a1a1a;
        --primary-red: #d32f2f;
        --white: #ffffff;
        --grey: #cccccc;
        --content-bg: #2a2a2a;
        --navbar-height: 70px;
    }

    /* Full page layout */
    .app-layout {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        background: var(--background);
        color: var(--white);
        font-family: 'Segoe UI', sans-serif;
        direction: rtl;
    }

    /* Top navbar with logo and tabs */
    .top-navbar {
        background-color: #1a1a1a;
        height: var(--navbar-height);
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        z-index: 100;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }

    .navbar-container {
        max-width: 1400px;
        margin: 0 auto;
        height: 100%;
        display: flex;
        align-items: center;
        padding: 0 20px;
    }

    .navbar-branding {
        display: flex;
        align-items: center;
        margin-left: 20px;
    }

    .navbar-logo {
        height: 40px;
        margin-left: 10px;
    }

    .navbar-title {
        color: var(--primary-red);
        font-weight: bold;
        font-size: 18px;
        white-space: nowrap;
    }

    .navbar-tabs {
        display: flex;
        align-items: center;
        height: 100%;
        overflow-x: auto;
        white-space: nowrap;
        flex-grow: 1;
    }

    .nav-tab {
        padding: 0 15px;
        height: 100%;
        background: none;
        border: none;
        color: var(--white);
        cursor: pointer;
        font-weight: bold;
        transition: 0.3s;
        border-bottom: 3px solid transparent;
        display: flex;
        align-items: center;
    }

        .nav-tab.active {
            border-bottom: 3px solid var(--primary-red);
            color: var(--primary-red);
        }

        .nav-tab:hover:not(.active) {
            background-color: rgba(255,255,255,0.05);
        }

    /* Content area */
    .content-container {
        margin-top: var(--navbar-height);
        flex-grow: 1;
        background: var(--background);
        padding: 20px;
    }

    .content-area {
        background-color: var(--content-bg);
        border-radius: 8px;
        padding: 25px;
        min-height: calc(100vh - var(--navbar-height) - 40px);
        box-shadow: 0 0 15px rgba(0,0,0,0.3);
    }

        /* Component styling overrides */
        .content-area :deep(*) {
            color: var(--white);
        }

        .content-area :deep(input),
        .content-area :deep(select),
        .content-area :deep(textarea) {
            background-color: #333;
            border: 1px solid #555;
            color: var(--white);
            border-radius: 6px;
            padding: 8px;
        }

        .content-area :deep(button) {
            background-color: var(--primary-red);
            color: white;
            border: none;
            border-radius: 6px;
            padding: 8px 16px;
            cursor: pointer;
            font-weight: bold;
        }

        .content-area :deep(button:hover) {
            background-color: #b71c1c;
        }

        .content-area :deep(table) {
            width: 100%;
            border-collapse: collapse;
        }

        .content-area :deep(th),
        .content-area :deep(td) {
            padding: 12px;
            text-align: right;
            border-bottom: 1px solid #555;
        }

        .content-area :deep(th) {
            background-color: #333;
        }

        .content-area :deep(tr:hover) {
            background-color: #3a3a3a;
        }

    /* Responsive adjustments */
    media (max-width: 768px) {
        .navbar-container

    {
        flex-direction: column;
        align-items: flex-start;
        padding: 10px;
    }

    .top-navbar {
        height: auto;
    }

    .navbar-branding {
        margin-bottom: 10px;
        width: 100%;
        justify-content: space-between;
    }

    .navbar-tabs {
        width: 100%;
        overflow-x: auto;
    }

    .nav-tab {
        padding: 10px;
        font-size: 14px;
        height: 40px;
    }

    .content-container {
        margin-top: 110px;
    }

    }
</style>

@code {
    private bool sidebarCollapsed = true;
    private bool sidebarOpen = false;
    private string ActiveTab { get; set; } = "equipment";

    private void ChangeTab(string tab)
    {
        ActiveTab = tab;
    }

    private void ToggleSidebarFromDashboard(bool open)
    {
        sidebarOpen = open;
        if (!open)
        {
            // When closing, ensure we're in collapsed state
            sidebarCollapsed = true;
        }
        StateHasChanged();
    }

    private void OnSidebarCollapseChanged(bool collapsed)
    {
        sidebarCollapsed = collapsed;
        // If we're expanding from collapsed state, ensure sidebar is open
        if (!collapsed && !sidebarOpen)
        {
            sidebarOpen = true;
        }
        StateHasChanged();
    }
}
