@page "/admin/dashboard"
@using Microsoft.AspNetCore.Authorization
@using Blazor_WebAssembly_Project.Components.helpers
@using Blazor_WebAssembly_Project.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Blazor_WebAssembly.Auth
@inject ILogger<AdminDashBoard> Logger
@inject IJSRuntime JS
@inject AuthenticationStateProvider AuthStateProvider
@attribute [Authorize(Roles = "Admin,admin,Administrator,administrator")]

<link href="css/dashboard.css" rel="stylesheet" />
<link href="css/themeToggle.css" rel="stylesheet" />
<link href="css/Sidebar.css" rel="stylesheet" />
<link href="css/themeToggle.css" rel="stylesheet" />

<PageTitle>Dashboard - מנהל מערכת</PageTitle>

<div class="dashboard-wrapper @(sidebarCollapsed ? "sidebar-collapsed" : "")">
    <Sidebar SidebarOpen="@sidebarOpen"
             SidebarOpenChanged="@ToggleSidebarFromDashboard"
             IsCollapsed="@sidebarCollapsed"
             OnCollapseChanged="@OnSidebarCollapseChanged" />
    <div style="flex: 1; display: flex; flex-direction: column;">
        <!-- Top navbar with logo and tabs -->
        <header class="admin-header">
            <div class="admin-navbar">
                <nav class="dashboard-nav tabs-with-separator">
                    <button class="dashboard-tab @(ActiveTab == "equipment" ? "active" : "")" @onclick='() => ChangeTab("equipment", 0)'>
                        <i class="bi bi-list-ul"></i> רשימת ציוד
                    </button>
                    <button class="dashboard-tab @(ActiveTab == "blacklist" ? "active" : "")" @onclick='() => ChangeTab("blacklist", 1)'>
                        <i class="bi bi-shield-x"></i> רשימה שחורה
                    </button>
                    <button class="dashboard-tab @(ActiveTab == "teams" ? "active" : "")" @onclick='() => ChangeTab("teams", 2)'>
                        <i class="bi bi-people"></i> ניהול צוותים
                    </button>
                    <button class="dashboard-tab @(ActiveTab == "users" ? "active" : "")" @onclick='() => ChangeTab("users", 3)'>
                        <i class="bi bi-person"></i> ניהול משתמשים
                    </button>
                    <button class="dashboard-tab @(ActiveTab == "checkout" ? "active" : "")" @onclick='() => ChangeTab("checkout", 4)'>
                        <i class="bi bi-box-arrow-right"></i> הוצאת ציוד
                    </button>
                    <button class="dashboard-tab @(ActiveTab == "return" ? "active" : "")" @onclick='() => ChangeTab("return", 5)'>
                        <i class="bi bi-box-arrow-in-left"></i> החזרת ציוד
                    </button>
                    <button class="dashboard-tab @(ActiveTab == "add" ? "active" : "")" @onclick='() => ChangeTab("add", 6)'>
                        <i class="bi bi-plus-circle"></i> הוספת ציוד
                    </button>
                </nav>
            </div>
        </header>

        <!-- Main content area -->
        <main class="admin-content">
            <div class="admin-content-container">
                @switch (ActiveTab)
                {
                    case "equipment":
                        <EquipmentList />
                        break;
                    case "blacklist":
                        <BlacklistView />
                        break;
                    case "teams":
                        <AddTeam />
                        break;
                    case "users":
                        <UserRoleManager />
                        break;
                    case "checkout":
                        <EquipmentCheckout />
                        break;
                    case "return":
                        <EquipmentReturnForm />
                        break;
                    case "add":
                        <AddEquipmentForm />
                        break;
                    case "history":
                        <UserActionLog />
                        break;
                    case "guide":
                        <SiteGuide />
                        break;
                    case "notifications":
                        <SiteNotifications />
                        break;
                    case "about":
                        <SiteAbout />
                        break;
                }
            </div>
        </main>
    </div>
</div>

@code {
    private string ActiveTab = "equipment";
    private bool sidebarOpen = false;
    private bool sidebarCollapsed = true;

    protected override async Task OnInitializedAsync()
    {
        // Set the initial tab
        Logger.LogInformation($"Initializing admin dashboard with tab: {ActiveTab}");
    }

    private void ChangeTab(string tabName, int tabIndex)
    {
        Logger.LogInformation($"Changing tab to: {tabName}");
        ActiveTab = tabName;
    }

    private int GetTabIndex(string tabName)
    {
        return tabName switch
        {
            "equipment" => 0,
            "blacklist" => 1,
            "teams" => 2,
            "users" => 3,
            "checkout" => 4,
            "return" => 5,
            "add" => 6,
            "history" => 7,
            "guide" => 8,
            "notifications" => 9,
            "about" => 10,
            _ => 0
        };
    }

    private async Task ToggleTheme()
    {
        await JS.InvokeVoidAsync("setTheme", "dark"); // or "light"
    }

    private void ToggleSidebarFromDashboard(bool open)
    {
        sidebarOpen = open;
        if (!open)
        {
            // When closing, ensure we're in collapsed state
            sidebarCollapsed = true;
        }
        StateHasChanged();
    }

    private void OnSidebarCollapseChanged(bool collapsed)
    {
        sidebarCollapsed = collapsed;
        // If we're expanding from collapsed state, ensure sidebar is open
        if (!collapsed && !sidebarOpen)
        {
            sidebarOpen = true;
        }
        StateHasChanged();
    }

    private void ToggleSidebarCollapse()
    {
        sidebarCollapsed = !sidebarCollapsed;
    }
}
