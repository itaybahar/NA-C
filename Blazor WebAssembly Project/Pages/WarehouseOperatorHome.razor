@page "/operator"
@attribute [Authorize(Roles = "Operator")]
@using Blazor_WebAssembly.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col">
            <h2>Warehouse Operator Dashboard</h2>
            <p class="lead">Manage equipment checkout, returns, and view blacklisted teams</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-clipboard-list fa-3x mb-3 text-primary"></i>
                    <h4 class="card-title">Equipment Checkout</h4>
                    <p class="card-text">Issue equipment to team members and track assignment details</p>
                    <button class="btn btn-primary" @onclick="NavigateToCheckout">Manage Checkouts</button>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-undo-alt fa-3x mb-3 text-success"></i>
                    <h4 class="card-title">Equipment Return</h4>
                    <p class="card-text">Process equipment returns and update inventory status</p>
                    <button class="btn btn-success" @onclick="NavigateToReturn">Process Returns</button>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-ban fa-3x mb-3 text-danger"></i>
                    <h4 class="card-title">Blacklist</h4>
                    <p class="card-text">View teams that have been blacklisted for equipment checkout</p>
                    <button class="btn btn-danger" @onclick="NavigateToBlacklist">View Blacklist</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Recent Activity</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Action</th>
                                    <th>Team</th>
                                    <th>Equipment</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (_recentActivities.Any())
                                {
                                    @foreach (var activity in _recentActivities)
                                    {
                                        <tr>
                                            <td>@activity.Date.ToShortDateString()</td>
                                            <td>@activity.Action</td>
                                            <td>@activity.Team</td>
                                            <td>@activity.Equipment</td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(activity.Status)">
                                                    @activity.Status
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No recent activities</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // Sample data for demonstration - would be replaced with actual service calls
    private List<ActivityRecord> _recentActivities = new()
    {
        new ActivityRecord
        {
            Date = DateTime.Now.AddDays(-1),
            Action = "Checkout",
            Team = "Alpha Team",
            Equipment = "Radio Set",
            Status = "Completed"
        },
        new ActivityRecord
        {
            Date = DateTime.Now.AddDays(-2),
            Action = "Return",
            Team = "Bravo Team",
            Equipment = "Night Vision Goggles",
            Status = "Completed"
        },
        new ActivityRecord
        {
            Date = DateTime.Now.AddDays(-3),
            Action = "Checkout",
            Team = "Charlie Team",
            Equipment = "Tactical Vest",
            Status = "Pending"
        }
    };

    private void NavigateToCheckout()
    {
        NavigationManager.NavigateTo("/equipment/checkout");
    }

    private void NavigateToReturn()
    {
        NavigationManager.NavigateTo("/equipment/return");
    }

    private void NavigateToBlacklist()
    {
        NavigationManager.NavigateTo("/blacklist");
    }

    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "completed" => "bg-success",
            "pending" => "bg-warning",
            "failed" => "bg-danger",
            "blacklisted" => "bg-dark",
            _ => "bg-secondary"
        };
    }

    private class ActivityRecord
    {
        public DateTime Date { get; set; }
        public string Action { get; set; } = "";
        public string Team { get; set; } = "";
        public string Equipment { get; set; } = "";
        public string Status { get; set; } = "";
    }
}