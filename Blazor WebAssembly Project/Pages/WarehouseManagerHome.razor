@page "/manager"
@attribute [Authorize(Roles = "Manager")]
@using Blazor_WebAssembly.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col">
            <h2>Warehouse Manager Dashboard</h2>
            <p class="lead">Monitor inventory, manage equipment, and handle requisitions</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-box-open fa-3x mb-3 text-primary"></i>
                    <h4 class="card-title">Inventory Management</h4>
                    <p class="card-text">Add new equipment and update existing inventory</p>
                    <button class="btn btn-primary" @onclick="NavigateToInventory">Manage Inventory</button>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-envelope fa-3x mb-3 text-success"></i>
                    <h4 class="card-title">Equipment Requests</h4>
                    <p class="card-text">Send requisition requests to central management</p>
                    <button class="btn btn-success" @onclick="NavigateToRequests">Manage Requests</button>
                </div>
            </div>
        </div>

        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <i class="fas fa-chart-bar fa-3x mb-3 text-info"></i>
                    <h4 class="card-title">Reports</h4>
                    <p class="card-text">View equipment usage and status reports</p>
                    <button class="btn btn-info" @onclick="NavigateToReports">View Reports</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Equipment Status</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="mb-2">
                                <span class="display-4 text-success">@_inventorySummary.Available</span>
                            </div>
                            <p>Available</p>
                        </div>
                        <div class="col-4">
                            <div class="mb-2">
                                <span class="display-4 text-warning">@_inventorySummary.CheckedOut</span>
                            </div>
                            <p>Checked Out</p>
                        </div>
                        <div class="col-4">
                            <div class="mb-2">
                                <span class="display-4 text-danger">@_inventorySummary.Maintenance</span>
                            </div>
                            <p>Maintenance</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Pending Requests</h5>
                </div>
                <div class="card-body">
                    @if (_pendingRequests.Any())
                    {
                        <div class="list-group">
                            @foreach (var request in _pendingRequests)
                            {
                                <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">@request.EquipmentName</h6>
                                        <small>Requested: @request.RequestDate.ToShortDateString()</small>
                                    </div>
                                    <span class="badge bg-primary rounded-pill">@request.Quantity</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <p class="mb-0">No pending requests</p>
                        </div>
                    }
                </div>
                <div class="card-footer bg-white">
                    <button class="btn btn-sm btn-outline-primary" @onclick="NavigateToRequests">
                        View All Requests
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Low Stock Items</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Equipment</th>
                                    <th>Category</th>
                                    <th>Available</th>
                                    <th>Minimum</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (_lowStockItems.Any())
                                {
                                    @foreach (var item in _lowStockItems)
                                    {
                                        <tr>
                                            <td>@item.Name</td>
                                            <td>@item.Category</td>
                                            <td class="text-danger">@item.Available</td>
                                            <td>@item.Minimum</td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-primary"
                                                        @onclick="() => CreateRequestForItem(item)">
                                                    Request More
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No low stock items</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // Sample data for demonstration - would be replaced with actual service calls
    private InventorySummary _inventorySummary = new()
    {
        Available = 127,
        CheckedOut = 48,
        Maintenance = 12
    };

    private List<PendingRequest> _pendingRequests = new()
    {
        new PendingRequest
        {
            EquipmentName = "Tactical Radios",
            RequestDate = DateTime.Now.AddDays(-3),
            Quantity = 10
        },
        new PendingRequest
        {
            EquipmentName = "Night Vision Goggles",
            RequestDate = DateTime.Now.AddDays(-1),
            Quantity = 5
        }
    };

    private List<LowStockItem> _lowStockItems = new()
    {
        new LowStockItem
        {
            Name = "Tactical Vests",
            Category = "Personal Protection",
            Available = 3,
            Minimum = 10
        },
        new LowStockItem
        {
            Name = "First Aid Kits",
            Category = "Medical",
            Available = 5,
            Minimum = 15
        },
        new LowStockItem
        {
            Name = "Field Binoculars",
            Category = "Observation",
            Available = 2,
            Minimum = 8
        }
    };

    private void NavigateToInventory()
    {
        NavigationManager.NavigateTo("/equipment/inventory");
    }

    private void NavigateToRequests()
    {
        NavigationManager.NavigateTo("/equipment/requests");
    }

    private void NavigateToReports()
    {
        NavigationManager.NavigateTo("/reports");
    }

    private void CreateRequestForItem(LowStockItem item)
    {
        NavigationManager.NavigateTo($"/equipment/requests/new?itemId={item.Id}&name={item.Name}");
    }

    private class InventorySummary
    {
        public int Available { get; set; }
        public int CheckedOut { get; set; }
        public int Maintenance { get; set; }
    }

    private class PendingRequest
    {
        public string EquipmentName { get; set; } = "";
        public DateTime RequestDate { get; set; }
        public int Quantity { get; set; }
    }

    private class LowStockItem
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Category { get; set; } = "";
        public int Available { get; set; }
        public int Minimum { get; set; }
    }
}