@page "/register"
@using Blazor_WebAssembly_Project.Models.Auth
@using Blazor_WebAssembly.Services.Interfaces
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3 class="text-center mt-4 text-danger">יצירת משתמש חדש</h3>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card shadow mt-3 register-card text-white bg-dark" dir="rtl">
            <div class="card-body">

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger text-center">@errorMessage</div>
                }

                <EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="username" class="form-label">שם משתמש</label>
                        <InputText @bind-Value="registerModel.Username" id="username" class="form-control input-dark" />
                        <ValidationMessage For="@(() => registerModel.Username)" />
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label">אימייל</label>
                        <InputText @bind-Value="registerModel.Email" id="email" type="email" class="form-control input-dark" />
                        <ValidationMessage For="@(() => registerModel.Email)" />
                    </div>

                    <div class="mb-3">
                        <label for="password" class="form-label">סיסמה</label>
                        <InputText @bind-Value="registerModel.Password" id="password" type="password" class="form-control input-dark" />
                        <ValidationMessage For="@(() => registerModel.Password)" />
                    </div>

                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">אימות סיסמה</label>
                        <InputText @bind-Value="registerModel.ConfirmPassword" id="confirmPassword" type="password" class="form-control input-dark" />
                        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                    </div>

                    <div class="mb-3">
                        <label for="role" class="form-label">תפקיד</label>
                        <InputSelect @bind-Value="registerModel.Role" id="role" class="form-select input-dark">
                            <option value="">בחר תפקיד</option>
                            <option value="User">משתמש</option>
                            <option value="Admin">מנהל</option>
                            <option value="WarehouseOperator">מפעיל מחסן</option>
                            <option value="WarehouseManager">מנהל מחסן</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => registerModel.Role)" />
                    </div>

                    <div class="d-grid">
                        <button class="btn btn-danger" type="submit" disabled="@isProcessing">
                            @if (isProcessing)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span class="ms-2">רושם...</span>
                            }
                            else
                            {
                                <span>הרשמה</span>
                            }
                        </button>
                    </div>

                    <div class="mt-3 text-center">
                        כבר יש לך משתמש? <a href="/login" class="text-light">התחבר</a>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new();
    private bool isProcessing = false;
    private string? errorMessage;

    private async Task HandleRegister()
    {
        isProcessing = true;
        errorMessage = null;

        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            errorMessage = "הסיסמאות אינן תואמות.";
            isProcessing = false;
            return;
        }

        try
        {
            var result = await AuthService.RegisterAsync(registerModel);

            if (result)
            {
                Navigation.NavigateTo("/login?registered=true");
            }
            else
            {
                errorMessage = "הרשמה נכשלה. נסה שוב.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isProcessing = false;
        }
    }
}
