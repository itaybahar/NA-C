@page "/register"
@using System.ComponentModel.DataAnnotations
@using Blazor_WebAssembly.Services.Interfaces
@using Blazor_WebAssembly_Project.Models.Auth
@inject IAuthService AuthService
@inject NavigationManager Navigation

<style>
    .container-center {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #1e1e2f;
        direction: rtl;
    }

    .card-dark {
        background-color: #1e1e1e;
        padding: 2rem;
        border-radius: 8px;
        width: 100%;
        max-width: 500px;
        box-shadow: 0 0 16px rgba(0, 0, 0, 0.6);
        color: white;
        text-align: center;
    }

        .card-dark img.logo {
            width: 100px;
            margin-bottom: 1rem;
        }

    h4 {
        margin-bottom: 1rem;
        color: #dc3545;
    }

    label {
        margin-bottom: 0.5rem;
        display: block;
        font-weight: 500;
        text-align: right;
    }

    .form-control {
        background-color: #2a2a2a;
        border: 1px solid #444;
        color: white;
        border-radius: 5px;
        padding: 0.5rem;
    }

        .form-control:focus {
            border-color: #dc3545;
            outline: none;
        }

    .btn-danger {
        background-color: #dc3545;
        border: none;
        width: 100%;
        padding: 0.5rem;
        margin-top: 1rem;
    }

        .btn-danger:disabled {
            opacity: 0.6;
        }

    .alert-danger {
        background-color: #dc3545;
        color: white;
        margin-top: 1rem;
        padding: 0.75rem;
        border-radius: 6px;
    }

    .validation-message {
        color: #dc3545;
        font-size: 0.8rem;
        text-align: right;
        margin-top: 0.25rem;
    }

    .bottom-link {
        text-align: center;
        margin-top: 1rem;
    }

        .bottom-link a {
            color: #0d6efd;
            text-decoration: none;
        }

            .bottom-link a:hover {
                text-decoration: underline;
            }
</style>

<div class="container-center">
    <div class="card-dark">
        <img src="images/logo_png.png.jpg" alt="Logo" class="logo" />
        <h4>הרשמה לאתר מחסן הנשיא</h4>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert-danger">@errorMessage</div>
        }

        <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />

            <div class="form-group mb-3 text-start">
                <label for="username">שם משתמש</label>
                <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
                <ValidationMessage For="@(() => registerModel.Username)" class="validation-message" />
            </div>

            <div class="form-group mb-3 text-start">
                <label for="email">כתובת דוא"ל</label>
                <InputText id="email" class="form-control" @bind-Value="registerModel.Email" type="email" />
                <ValidationMessage For="@(() => registerModel.Email)" class="validation-message" />
            </div>

            <div class="form-group mb-3 text-start">
                <label for="password">סיסמה</label>
                <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
                <ValidationMessage For="@(() => registerModel.Password)" class="validation-message" />
            </div>

            <div class="form-group mb-4 text-start">
                <label for="confirmPassword">אימות סיסמה</label>
                <InputText id="confirmPassword" class="form-control" @bind-Value="registerModel.ConfirmPassword" type="password" />
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" class="validation-message" />
            </div>

            <button type="submit" class="btn btn-danger" disabled="@isSubmitting">
                @if (isSubmitting)
                {
                    <span>נרשם...</span>
                }
                else
                {
                    <span>הירשם</span>
                }
            </button>
        </EditForm>

        <div class="bottom-link">
            יש לך משתמש קיים? <a href="/login">התחבר</a>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new()
    {
        Username = "",
        Email = "",
        Password = "",
        ConfirmPassword = "",
        Role = "User" // Default role
    };

    private string errorMessage = string.Empty;
    private bool isSubmitting = false;

    private async Task HandleRegistration()
    {
        isSubmitting = true;
        errorMessage = string.Empty;

        try
        {
            var result = await AuthService.RegisterAsync(registerModel);
            if (result)
            {
                // Redirect to login page with success message
                Navigation.NavigateTo("/login?registered=true");
            }
            else
            {
                errorMessage = "חלה שגיאה בתהליך ההרשמה. אנא נסה שוב מאוחר יותר.";
            }
        }
        catch (Exception ex)
        {
            if (ex.Message.Contains("Username is already taken") || ex.Message.Contains("Username already exists"))
            {
                errorMessage = "שם המשתמש הזה כבר בשימוש. אנא בחר שם משתמש אחר.";
            }
            else if (ex.Message.Contains("Email is already in use"))
            {
                errorMessage = "כתובת הדוא״ל הזו כבר בשימוש. אנא נסה להשתמש בכתובת אחרת.";
            }
            else
            {
                errorMessage = $"שגיאה: {ex.Message}";
            }
        }

        isSubmitting = false;
    }
}
