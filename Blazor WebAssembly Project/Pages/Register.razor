@page "/register"
@using System.ComponentModel.DataAnnotations
@using Blazor_WebAssembly.Services.Interfaces
@using Blazor_WebAssembly_Project.Models.Auth
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="login-container">
    <div class="login-card">
        <div class="login-header">
            <img src="images/logo_png.png" alt="Logo" class="logo" />
            <h1>הרשמה למחסן הנשיא</h1>
            <p>מלא את הפרטים שלך כדי להירשם</p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <div class="login-tabs">
            <button class="tab @(activeTab == "regular" ? "active" : "")" @onclick="@(() => activeTab = "regular")">משתמש רגיל</button>
            <button class="tab @(activeTab == "google" ? "active" : "")" @onclick="@(() => activeTab = "google")">Gmail</button>
        </div>

        @if (activeTab == "regular")
        {
            <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <InputText @bind-Value="registerModel.Username" placeholder="שם משתמש" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.Username)" class="validation-message" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="registerModel.Email" placeholder="אימייל" type="email" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.Email)" class="validation-message" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="registerModel.Password" placeholder="סיסמה" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.Password)" class="validation-message" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="registerModel.ConfirmPassword" placeholder="אימות סיסמה" type="password" class="form-control" />
                    <ValidationMessage For="@(() => registerModel.ConfirmPassword)" class="validation-message" />
                </div>

                <button type="submit" class="btn-submit" disabled="@isSubmitting">
                    @(isSubmitting ? "נרשם..." : "הירשם")
                </button>
            </EditForm>
        }
        else
        {
            <div class="google-login">
                <p>לחץ על הכפתור למטה כדי להירשם עם חשבון Google:</p>
                <button class="btn-google" @onclick="HandleGoogleRegister">
                    <img src="images/google-logo.png" alt="Google" />
                    הירשם עם Gmail
                </button>
            </div>
        }

        <div class="login-footer">
            <p>כבר רשום? <a href="/login">התחבר עכשיו</a></p>
        </div>
    </div>
</div>

<style>
    :root {
        --background: #1a1a1a;
        --primary-red: #d32f2f;
        --white: #ffffff;
        --grey: #cccccc;
    }

    .login-container {
        background: var(--background);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        direction: rtl;
        color: var(--white);
        font-family: 'Segoe UI', sans-serif;
    }

    .login-card {
        background-color: #2a2a2a;
        padding: 30px;
        border-radius: 12px;
        width: 100%;
        max-width: 400px;
        box-shadow: 0 0 15px rgba(0,0,0,0.5);
    }

    .login-header {
        text-align: center;
        margin-bottom: 25px;
    }

    .logo {
        width: 90px;
        height: 90px;
        margin-bottom: 10px;
        object-fit: contain;
    }

    .login-header h1 {
        color: var(--primary-red);
        margin: 0;
        font-size: 24px;
    }

    .login-header p {
        color: var(--grey);
        font-size: 14px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border-radius: 6px;
        border: none;
        background-color: #444;
        color: var(--white);
    }

        .form-control:focus {
            outline: 2px solid var(--primary-red);
        }

    .validation-message {
        color: var(--primary-red);
        font-size: 0.8rem;
        margin-top: 0.25rem;
    }

    .btn-submit {
        background-color: var(--primary-red);
        color: var(--white);
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 6px;
        font-weight: bold;
        cursor: pointer;
    }

        .btn-submit:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

    .login-tabs {
        display: flex;
        margin-bottom: 20px;
        border-bottom: 2px solid #444;
    }

    .tab {
        flex: 1;
        padding: 10px;
        background: none;
        border: none;
        color: var(--white);
        cursor: pointer;
        font-weight: bold;
        transition: 0.3s;
    }

        .tab.active {
            border-bottom: 3px solid var(--primary-red);
            color: var(--primary-red);
        }

    .google-login {
        text-align: center;
    }

    .btn-google {
        margin-top: 10px;
        background-color: white;
        color: #333;
        border: none;
        border-radius: 6px;
        padding: 10px 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        width: 100%;
        font-weight: bold;
        cursor: pointer;
    }

        .btn-google img {
            width: 20px;
            height: 20px;
        }

    .login-footer {
        text-align: center;
        margin-top: 20px;
        font-size: 14px;
    }

        .login-footer a {
            color: var(--primary-red);
            text-decoration: none;
            font-weight: bold;
        }
</style>

@code {
    private RegisterModel registerModel = new()
    {
        Username = "",
        Email = "",
        Password = "",
        ConfirmPassword = "",
        Role = "User"
    };

    private string errorMessage = string.Empty;
    private bool isSubmitting = false;
    private string activeTab = "regular";

    private async Task HandleRegistration()
    {
        isSubmitting = true;
        errorMessage = string.Empty;

        try
        {
            var result = await AuthService.RegisterAsync(registerModel);
            if (result)
            {
                Navigation.NavigateTo("/login?registered=true");
            }
            else
            {
                errorMessage = "חלה שגיאה בתהליך ההרשמה. נסה שוב מאוחר יותר.";
            }
        }
        catch (Exception ex)
        {
            if (ex.Message.Contains("Username is already taken") || ex.Message.Contains("Username already exists"))
            {
                errorMessage = "שם המשתמש כבר תפוס. אנא בחר שם אחר.";
            }
            else if (ex.Message.Contains("Email is already in use"))
            {
                errorMessage = "כתובת המייל כבר בשימוש.";
            }
            else
            {
                errorMessage = $"שגיאה: {ex.Message}";
            }
        }

        isSubmitting = false;
    }

    private void HandleGoogleRegister()
    {
        Navigation.NavigateTo("https://localhost:5191/auth/login-google", true);
    }
}
