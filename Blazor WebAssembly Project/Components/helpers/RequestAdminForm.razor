@using Blazor_WebAssembly.Services.Interfaces
@inject IEquipmentRequestService RequestService

<h2 class="text-center text-xl font-bold mb-6 text-white">שלח בקשה למנהל</h2>

<div class="request-container">
    <div class="form-group">
        <label class="input-label">תוכן הבקשה</label>
        <textarea @bind="Message" class="form-control" rows="5" placeholder="כתוב כאן..." @oninput="ValidateMessage"></textarea>
        @if (!string.IsNullOrEmpty(ValidationError))
        {
            <p class="validation-error">@ValidationError</p>
        }
    </div>

    <button class="btn-submit" @onclick="SendRequest" disabled="@(isSubmitting || string.IsNullOrWhiteSpace(Message))">
        @if (isSubmitting)
        {
            <span>שולח בקשה...</span>
        }
        else
        {
            <span>שלח בקשה</span>
        }
    </button>

    @if (Sent)
    {
        <div class="alert-success mt-4">
            <p>הבקשה נשלחה בהצלחה!</p>
        </div>
    }
</div>

<style>
    .request-container {
        background-color: #2a2a2a;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        max-width: 500px;
        margin: 0 auto;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .input-label {
        display: block;
        font-weight: bold;
        margin-bottom: 0.5rem;
        color: #cccccc;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border-radius: 6px;
        border: none;
        background-color: #444;
        color: #ffffff;
        transition: all 0.3s;
    }

        .form-control:focus {
            outline: 2px solid #d32f2f;
            background-color: #555;
        }

    .btn-submit {
        background-color: #d32f2f;
        color: #ffffff;
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 6px;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s;
    }

        .btn-submit:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .btn-submit:hover:not(:disabled) {
            background-color: #b71c1c;
        }

    .alert-success {
        background-color: rgba(40, 167, 69, 0.2);
        color: #28a745;
        padding: 10px;
        border-radius: 6px;
        border: 1px solid rgba(40, 167, 69, 0.3);
        text-align: center;
    }

    .validation-error {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.5rem;
    }
</style>

@code {
    private string Message = string.Empty;
    private bool Sent = false;
    private bool isSubmitting = false;
    private string? ValidationError;

    private async Task SendRequest()
    {
        if (string.IsNullOrWhiteSpace(Message))
        {
            ValidationError = "יש להזין תוכן לבקשה.";
            return;
        }

        isSubmitting = true;
        Sent = false;
        ValidationError = null;
        StateHasChanged();

        try
        {
            if (RequestService != null)
            {
                await RequestService.SendEquipmentRequestAsync(Message);
                Message = string.Empty;
                Sent = true;
            }
        }
        catch (Exception ex)
        {
            ValidationError = $"שגיאה בשליחת הבקשה: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }

    private void ValidateMessage(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(Message))
        {
            ValidationError = "יש להזין תוכן לבקשה.";
        }
        else
        {
            ValidationError = null;
        }
    }
}




